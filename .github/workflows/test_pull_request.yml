name: Test Pull Request
on: [pull_request]
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: dcodeIO/setup-node-nvm@v2.0.0

      - name: Yarn install
        run: |
          yarn --frozen-lockfile --non-interactive

      - name: Test
        run: |
          yarn validate
          yarn test:ci
        env:
          CI: true

      - name: Build
        run: |
          yarn build

      - name: Deploy preview
        id: deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          DEPLOYMENT_MESSAGE: '${{ github.head_ref }}@${{ github.sha }}'
        run: |
          npm install netlify-cli@^2.0.0 -g -s

          NETLIFY_OUTPUT=$(netlify deploy --json --message "${DEPLOYMENT_MESSAGE}")
          echo $NETLIFY_OUTPUT

          SITE_ID=$(echo "$NETLIFY_OUTPUT" | jq -r '.site_id' )
          SITE_NAME=$(echo "$NETLIFY_OUTPUT" | jq -r '.site_name' )
          DEPLOY_ID=$(echo "$NETLIFY_OUTPUT" | jq -r '.deploy_id' )
          DEPLOY_URL=$(echo "$NETLIFY_OUTPUT" | jq -r '.deploy_url' )
          LOGS=$(echo "$NETLIFY_OUTPUT" | jq -r '.logs' )

          echo "::set-output name=NETLIFY_OUTPUT::$NETLIFY_OUTPUT"
          echo "::set-output name=NETLIFY_SITE_ID::$SITE_ID"
          echo "::set-output name=NETLIFY_SITE_NAME::$SITE_NAME"
          echo "::set-output name=NETLIFY_DEPLOY_ID::$DEPLOY_ID"
          echo "::set-output name=NETLIFY_DEPLOY_URL::$DEPLOY_URL"
          echo "::set-output name=NETLIFY_LOGS::$LOGS"

      - name: E2E test
        uses: cypress-io/github-action@v1
        with:
          browser: chrome
          headless: true
        env:
          CYPRESS_BASE_URL: ${{ steps.deploy.outputs.NETLIFY_DEPLOY_URL }}

      - name: Upload screenshots
        id: deploy_screenshots
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          DEPLOYMENT_MESSAGE: '${{ github.head_ref }}@${{ github.sha }}/screenshots'
        run: |
          npm install netlify-cli@^2.0.0 -g -s

          NETLIFY_OUTPUT=$(netlify deploy --json --dir=cypress/screenshots --message "${DEPLOYMENT_MESSAGE}")
          echo $NETLIFY_OUTPUT

          DEPLOY_URL=$(echo "$NETLIFY_OUTPUT" | jq -r '.deploy_url' )
          echo "::set-output name=NETLIFY_DEPLOY_URL::$DEPLOY_URL"

      - name: Comment on PR
        uses: unsplash/comment-on-pr@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: '
          Draft deploy is [live](${{ steps.deploy.outputs.NETLIFY_DEPLOY_URL }})!\n
          ---\n
          > ![Screenshot](${{ steps.deploy_screenshots.outputs.NETLIFY_DEPLOY_URL }}/screenshot.test.js/cropped.png)\n
          > <details><summary>macbook-13</summary><img src="${{ steps.deploy_screenshots.outputs.NETLIFY_DEPLOY_URL }}/screenshot.test.js/macbook-13.png" alt="macbook-13"/></details>\n
          > <details><summary>ipad-mini</summary><img src="${{ steps.deploy_screenshots.outputs.NETLIFY_DEPLOY_URL }}/screenshot.test.js/ipad-mini.png" alt="ipad-mini"/></details>\n
          > <details><summary>iphone-x</summary><img src="${{ steps.deploy_screenshots.outputs.NETLIFY_DEPLOY_URL }}/screenshot.test.js/iphone-x.png" alt="iphone-x"/></details>\n
          '
